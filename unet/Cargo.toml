[package]
name = "unet"
default-run = "unet"
edition.workspace = true
version.workspace = true
description.workspace = true
authors.workspace = true
repository.workspace = true


[features]
browser = [
    "dep:yew",
]
aws = [
    "dep:aws-config",
    "dep:aws-sdk-apigatewaymanagement",
    "dep:aws-sdk-cloudformation",
    "dep:aws-sdk-cognitoidentityprovider",
    "dep:aws-sdk-dynamodb",
    "dep:aws-sdk-ecr",
    "dep:aws-sdk-s3",
    "dep:aws_lambda_events",
    "dep:base64",
    "dep:cookie",
    "dep:jsonwebtoken",
    "dep:lambda_http",
    "dep:lambda_runtime",
]

[dependencies]
aws-config = { workspace = true, optional = true }
aws-sdk-apigatewaymanagement = { workspace = true, optional = true }
aws-sdk-cloudformation = { workspace = true, optional = true }
aws-sdk-cognitoidentityprovider = { workspace = true, optional = true }
aws-sdk-dynamodb = { workspace = true, optional = true }
aws-sdk-ecr = { workspace = true, optional = true }
aws-sdk-s3 = { workspace = true, optional = true }
aws_lambda_events = { workspace = true, optional = true }
base64 = { workspace = true, optional = true }
cookie = { workspace = true, optional = true }
futures.workspace = true
js-sys = { workspace = true, optional = true }
jsonwebtoken = { workspace = true, optional = true }
lambda_http = { workspace = true, optional = true }
lambda_runtime = { workspace = true, optional = true }
serde.workspace = true
serde_json.workspace = true
tracing = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
url.workspace = true
wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }
web-sys = { workspace = true, optional = true }
yew = { workspace = true, optional = true }

[target.'cfg(any(target_os = "macos", target_os = "windows", target_os = "linux"))'.dependencies]
clap.workspace = true
dirs.workspace = true
futures-util.workspace = true
http.workspace = true
reqwest.workspace = true
reqwest_cookie_store.workspace = true
tokio-tungstenite.workspace = true
tokio.workspace = true

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dependencies]
js-sys.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
web-sys.workspace = true

[[bin]]
name = "lambda"
required-features = ["aws"]

[[bin]]
name = "browser"
required-features = ["browser"]

[[bin]]
name = "unet"
