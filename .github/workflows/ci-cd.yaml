name: "CI/CD"

on:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    concurrency:
      group: build:${{ github.ref }}
      cancel-in-progress: true

    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Docker meta
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
    -
      name: Docker Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=registry,ref=ghcr.io/${{ github.repository }}:buildcache.${{ github.ref_name }}
          type=registry,ref=ghcr.io/${{ github.repository }}:buildcache.main
        cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache.${{ github.ref_name }},mode=max


  Test:
    needs: Build
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
    environment: Staging
    # We don't want the staging stack being deployed from multiple workflows at
    # the same time
    concurrency:
      group: test:${{ github.ref }}

    steps:
    -
      name: rustup show
      run: rustup show
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Check
      run: cargo check --verbose --bins --examples --tests
    -
      name: Deploy to ${{ github.ref_name }}.unet-staging.com
      run: cargo run deploy
    -
      name: Test againt staging deployment
      run: cargo test --verbose

  Deploy:
    needs: Test
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
    environment: Production
    if: github.ref == 'refs/heads/main'
    concurrency:
      group: test:${{ github.ref }}

    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Deploy to unet.tech
      run: cargo run deploy
    -
      name: Test against production deployment
      run: cargo test --verbose
