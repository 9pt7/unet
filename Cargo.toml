[package]
name = "unet"
description = "A Distributed Operating System in Rust"
version = "0.2.0-dev"
authors = ["Peter Thompson <peter@unet.tech>"]
homepage = "unet.tech"
repository = "https://github.com/9pt7/unet.git"
edition = "2021"
default-run = "unet"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
browser = [
    "dep:js-sys",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "dep:web-sys",
    "dep:yew",
]
aws = [
    "dep:aws-config",
    "dep:aws-sdk-apigatewaymanagement",
    "dep:aws-sdk-cloudformation",
    "dep:aws-sdk-cognitoidentityprovider",
    "dep:aws-sdk-dynamodb",
    "dep:aws-sdk-ecr",
    "dep:aws-sdk-s3",
    "dep:aws_lambda_events",
    "dep:base64",
    "dep:jsonwebtoken",
    "dep:lambda_http",
    "dep:lambda_runtime",
]

[dependencies]
aws-config = { version = "0.56.1", optional = true }
aws-sdk-apigatewaymanagement = { version = "0.33.0", optional = true }
aws-sdk-cloudformation = { version = "0.33.0", optional = true }
aws-sdk-cognitoidentityprovider = { version = "0.31.1", optional = true }
aws-sdk-dynamodb = { version = "0.33.0", optional = true }
aws-sdk-ecr = { version = "0.32.0", optional = true }
aws-sdk-s3 = { version = "0.33.0", optional = true }
aws_lambda_events = { version = "0.11.1", optional = true }
base64 = { version = "0.21.4", optional = true }
js-sys = { version = "0.3.64", optional = true }
jsonwebtoken = { version = "9", default-features = false, optional = true }
lambda_http = { version = "0.8.1", optional = true }
lambda_runtime = { version = "0.8.2", optional = true }
serde = { version = "1.0.188", features = ["derive"] }
serde_json = { version = "1.0.107" }
tracing = { version = "0.1", features = ["log"], optional = true }
tracing-subscriber = { version = "0.3", default-features = false, features = ["fmt"], optional = true }
url = "2.4.1"
wasm-bindgen = { version = "0.2.84", optional = true }
wasm-bindgen-futures = { version = "0.4.37", optional = true }
web-sys = { version = "0.3.64", optional = true }
yew = { version = "0.21.0", features = ["csr"], optional = true }

[target.'cfg(any(target_os = "macos", target_os = "windows", target_os = "linux"))'.dependencies]
clap = { version = "4.4.6", features = ["derive", "wrap_help"] }
dirs = "5.0.1"
futures-util = "0.3.28"
http = "0.2.4"
reqwest = { version = "0.11.20", default-features = false, features = ["rustls-tls", "json"] }
tokio = { version = "1.32.0", features = ["full", "test-util"] }
tokio-tungstenite = { version = "0.20.1", features = ["rustls-tls-native-roots"] }


[[bin]]
name = "lambda"
required-features = ["aws"]

[[bin]]
name = "browser"
required-features = ["browser"]

[[bin]]
name = "unet"
